# Generated by Django 5.2.5 on 2025-08-14 11:42

import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="User",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                (
                    "username",
                    models.CharField(
                        help_text="Nome único para login no sistema",
                        max_length=150,
                        unique=True,
                        verbose_name="Nome de usuário",
                    ),
                ),
                (
                    "password",
                    models.CharField(
                        help_text="Senha criptografada",
                        max_length=128,
                        verbose_name="Senha",
                    ),
                ),
                (
                    "email",
                    models.EmailField(
                        blank=True,
                        help_text="Email obrigatório para administradores",
                        max_length=254,
                        null=True,
                        unique=True,
                        verbose_name="Email",
                    ),
                ),
                (
                    "full_name",
                    models.CharField(
                        blank=True,
                        help_text="Nome completo do usuário",
                        max_length=255,
                        verbose_name="Nome completo",
                    ),
                ),
                (
                    "is_admin",
                    models.BooleanField(
                        default=False,
                        help_text="Usuário com permissões administrativas",
                        verbose_name="Administrador",
                    ),
                ),
                (
                    "is_cooperated",
                    models.BooleanField(
                        default=True,
                        help_text="Usuário participante das operações da cooperativa",
                        verbose_name="Cooperado",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Indica se o usuário pode fazer login no sistema",
                        verbose_name="Ativo",
                    ),
                ),
                (
                    "is_staff",
                    models.BooleanField(
                        default=False,
                        help_text="Indica se o usuário pode acessar o admin",
                        verbose_name="Membro da equipe",
                    ),
                ),
                (
                    "date_joined",
                    models.DateTimeField(
                        default=django.utils.timezone.now,
                        help_text="Data e hora do cadastro",
                        verbose_name="Data de cadastro",
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(
                        auto_now=True,
                        help_text="Data e hora da última atualização",
                        verbose_name="Última atualização",
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        help_text="Administrador que realizou o cadastro",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="created_users",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Criado por",
                    ),
                ),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to.",
                        related_name="users_users",
                        to="auth.group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "updated_by",
                    models.ForeignKey(
                        blank=True,
                        help_text="Administrador que realizou a última atualização",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="updated_users",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Atualizado por",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="users_users_permissions",
                        to="auth.permission",
                        verbose_name="user permissions",
                    ),
                ),
            ],
            options={
                "verbose_name": "Usuário",
                "verbose_name_plural": "Usuários",
                "db_table": "users_user",
                "ordering": ["full_name"],
            },
        ),
    ]
